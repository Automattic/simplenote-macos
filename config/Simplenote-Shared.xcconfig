//
// Simplenote-Shared.xcconfig
//
// Generated by BuildSettingExtractor on 4/11/20
// https://github.com/dempseyatgithub/BuildSettingExtractor
//

#include "Code-Sign-Mac-Developer.xcconfig"

// Always Search User Paths (Deprecated)
//
// This setting is deprecated as of Xcode 8.3 and may not be supported in future
// versions. It is recommended that you disable the setting.
//
// If enabled, both `#include <header.h>`-style and `#include "header.h"`-style
// directives search the paths in `USER_HEADER_SEARCH_PATHS` before
// `HEADER_SEARCH_PATHS`. As a consequence, user headers, such as your own `String.h`
// header, have precedence over system headers when using `#include <header.h>`. This is
// done using the `-iquote` flag for the paths provided in `USER_HEADER_SEARCH_PATHS`. If
// disabled and your compiler fully supports separate user paths, user headers are only
// accessible with `#include "header.h"`-style preprocessor directives.
//
// For backwards compatibility reasons, this setting is enabled by default. Disabling it
// is strongly recommended.
ALWAYS_SEARCH_USER_PATHS = NO

// Asset Catalog App Icon Set Name
//
// Name of an asset catalog app icon set whose contents will be merged into the
// `Info.plist`.
ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon-Beta

// Enable Modules (C and Objective-C)
//
// Enables the use of modules for system APIs. System headers are imported as semantic
// modules instead of raw headers. This can result in faster builds and project indexing.
CLANG_ENABLE_MODULES = YES

// Code Signing Entitlements
//
// The path to a file specifying code-signing entitlements.
CODE_SIGN_ENTITLEMENTS = Simplenote.entitlements

// Code Signing Style
//
// This setting specifies the method used to acquire and locate signing assets. Choose
// `Automatic` to let Xcode automatically create and update profiles, app IDs, and
// certificates. Choose `Manual` to create and update these yourself on the developer
// website.
CODE_SIGN_STYLE = Manual

// Combine HiDPI Images
//
// Combines image files at different resolutions into one multi-page TIFF file that is
// HiDPI compliant for macOS 10.7 and later. Only image files in the same directory and
// with the same base name and extension are combined. The file names must conform to the
// naming convention used in HiDPI.
COMBINE_HIDPI_IMAGES = YES

// Development Team
//
// The team ID of a development team to use for signing certificates and provisioning
// profiles.
DEVELOPMENT_TEAM = PZYM8XX95Q

// Enable Hardened Runtime
//
// Hardened Runtime defends your application by preventing modifications to its code and
// provides fine-grained controls over what can run in your process. Hardening the
// runtime also prevents access to sensitive resources unless your application
// pre-declares its intent to use them, which reduces the attack surface by eliminating
// unnecessary access.  These properties help prevent exploitation of your application
// and this capability is required for your app to be notarized.
ENABLE_HARDENED_RUNTIME = YES

// Framework Search Paths
//
// This is a list of paths to folders containing frameworks to be searched by the
// compiler for both included or imported header files when compiling C, Objective-C,
// C++, or Objective-C++, and by the linker for frameworks used by the product. Paths are
// delimited by whitespace, so any paths with spaces in them must be properly quoted.
FRAMEWORK_SEARCH_PATHS = $(inherited) "$(SRCROOT)/External" $(PROJECT_DIR)/External $(PROJECT_DIR)/External/Sparkle/Frameworks

// Precompile Prefix Header
//
// Generates a precompiled header for the prefix header, which should reduce overall
// build times.
//
// Precompiling the prefix header will be most effective if the contents of the prefix
// header or any file it includes change rarely. If the contents of the prefix header or
// any file it includes change frequently, there may be a negative impact to overall
// build time.
GCC_PRECOMPILE_PREFIX_HEADER = YES

// Prefix Header
//
// Implicitly include the named header. The path given should either be a project
// relative path or an absolute path.
GCC_PREFIX_HEADER = Simplenote/Simplenote-Prefix.pch

// Undeclared Selector
//
// Warn if a `@selector(...)` expression referring to an undeclared selector is found. A
// selector is considered undeclared if no method with that name has been declared before
// the `@selector(...)` expression, either explicitly in an `@interface` or `@protocol`
// declaration, or implicitly in an `@implementation` section. This option always
// performs its checks as soon as a `@selector(...)` expression is found, while
// `-Wselector` only performs its checks in the final stage of compilation. This also
// enforces the coding style convention that methods and selectors must be declared
// before being used.
GCC_WARN_UNDECLARED_SELECTOR = NO

// Info.plist File
//
// The project-relative path to the property list file that contains the `Info.plist`
// information used by bundles. For details on information property list files, see
// [Information Property List
// Files](https://developer.apple.com/library/content/documentation/MacOSX/Conceptual/BPRuntimeConfig/Articles/ConfigFiles.html#//apple_ref/doc/uid/20002091-CJBJIEDH)
// in [Runtime Configuration
// Guidelines](https://developer.apple.com/library/content/documentation/MacOSX/Conceptual/BPRuntimeConfig/000-Introduction/introduction.html).
INFOPLIST_FILE = Simplenote/Simplenote-Info-Hockey.plist

// Runpath Search Paths
//
// This is a list of paths to be added to the `runpath` search path list for the image
// being created. At runtime, `dyld` uses the `runpath` when searching for dylibs whose
// load path begins with `@rpath/`. See [Dynamic Library Programming
// Topics](https://developer.apple.com/library/content/documentation/DeveloperTools/Conceptual/DynamicLibraries/000-Introduction/Introduction.html).
LD_RUNPATH_SEARCH_PATHS = $(inherited) @loader_path/../Frameworks

// Library Search Paths
//
// This is a list of paths to folders to be searched by the linker for libraries used by
// the product. Paths are delimited by whitespace, so any paths with spaces in them need
// to be properly quoted.
LIBRARY_SEARCH_PATHS = $(inherited)

// Other C Flags
//
// Space-separated list of additional flags to pass to the compiler for C and Objective-C
// files. Be sure to backslash-escape any arguments that contain spaces or special
// characters, such as path names that may contain spaces. Use this setting if Xcode does
// not already provide UI for a particular C or Objective-C compiler flag.
OTHER_CFLAGS = ${inherited}

// Other Code Signing Flags
//
// A list of additional options to pass to `codesign(1)`.
OTHER_CODE_SIGN_FLAGS =

// Other Linker Flags
//
// Options defined in this setting are passed to invocations of the linker.
OTHER_LDFLAGS = -ObjC -all_load ${inherited}

// Product Bundle Identifier
//
// A string that uniquely identifies the bundle. The string should be in reverse DNS
// format using only alphanumeric characters (`A-Z`, `a-z`, `0-9`), the dot (`.`), and
// the hyphen (`-`). This value is used as the `CFBundleIdentifier` in the `Info.plist`
// of the built bundle.
PRODUCT_BUNDLE_IDENTIFIER = com.automattic.SimplenoteMac.beta

// Product Name
//
// This is the basename of the product generated by the target.
PRODUCT_NAME = Simplenote

PROVISIONING_PROFILE =

// Provisioning Profile
//
// Must contain a profile name (or UUID). A missing or invalid profile will cause a build
// error. Use in conjunction with [DEVELOPMENT_TEAM] to fully specify provisioning
// profile.
PROVISIONING_PROFILE_SPECIFIER =

// Base SDK
//
// The name or path of the base SDK being used during the build. The product will be
// built against the headers and libraries located inside the indicated SDK. This path
// will be prepended to all search paths, and will be passed through the environment to
// the compiler and linker. Additional SDKs can be specified in the `ADDITIONAL_SDKS`
// setting.
SDKROOT = macosx

VALID_ARCHS = x86_64

// Wrapper Extension
//
// The extension used for product wrappers, which has a default value based on the
// product type.
WRAPPER_EXTENSION = app
